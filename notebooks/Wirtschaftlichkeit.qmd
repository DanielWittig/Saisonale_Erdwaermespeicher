---
title: "Wirtschaftlichkeit Saisonaler Erdwärmespeicher"
format: gfm #github flavoured mardown
editor: source
---

## Setup

```{r}
# RStudio 23.12.0 on Linux Mint Debian Edition 6
# install python version = '3' #3.12
# install.packages('reticulate')
library(reticulate)
# reticulate::repl_python() #say yes to the creation of a virtual environment "r-reticulate"
# py_install("pandas", envname = 'r-reticulate')
# py_install("openpyxl", envname = 'r-reticulate')
# py_install(c('matplotlib', 'seaborn'), envname = 'r-reticulate')

# insert chunk shortcut: Ctrl+Alt+P
# from:
# https://stackoverflow.com/questions/62408197/editing-keyboard-shortcut-to-produce-code-chunk-in-r-studio
```

## Readme

Choice of language: As this work is based on heliogaia.de which is written in German and as I hope, that a pilot project for "Saisonale Erwärmespeicher" will be started in Germany and thus has to use quite a lot of German data sources and variable names, I am using mostly the German language here.

Sprachwahl: Da diese Arbeit auf heliogaia.de basiert und da ich hoffe, dass ein Pilotprojekt für Saisonale Wärmespeicher in Deutschland realisert wird, also viele deutsche Variablennamen verwenden wird, die auch zur Zeit noch im Entstehen sein sollten, verwende ich hier zunächst der Schnelligkeit halber die deutsche Sprache.

Falls hier R chunks verwendet werden, sollten sie zwecks Sichtbarkeit auf Github mit dem Kommentar #r beginnen, ausser sie sind reine Variablenzuweisungen mit dem <- Zeichen. Sonstige chunks sind in Python geschrieben.

Geldbetraege sind in Euro, sofern nicht anders vermerkt.

## Packages
```{python}
import pandas as pd
1+1
```

## ---Start---------------
```{r}
# browseURL('https://heliogaia.de/endergebnisse.html')
# browseURL('https://heliogaia.de/tabellen.html')
browseURL('/home/danielwittig/repos/Saisonale_Erdwaermespeicher/_base')
```

## Rechenweg

Vorerst nur:

Zielszenario, ohne Blockheizkraftwerk (BHKW), Menschen leben in sanierten Gebäuden mit durchschnittlich 80 kWh/a/m²

Erweiterungsmöglichkeit:

Übergangsszenario, mit BHKW, nicht alle Einwohner leben in sanierten Gebäuden, drei Fernwärmeleitungen nötig

### Szenarien:

https://heliogaia.de/tabellen.html : in der Regel :

* Blatt "e" simuliert eine zweijährige Wärmebilanz pro Person in Tagesschritten, einschließlich des Ladeverhaltens des Saisonspeichers. Die Parameter werden rechts in blaue Felder eingegeben. 
* Blatt "t" berechnet daraus und aus weiteren Parametern das Gesamtergebnis. 
* Blätter "h", "u" und "s" dienen zur Abschätzung von Hauptverteilung und Unterverteilung im Fernwärmenetz sowie zum Erfassen der Siedlungsparameter. 

Zur Aufdeckung und Vermeidung systematischer Fehler und teils auch zur Aufwandsbegrenzung ist die Herangehensweise nicht in allen Tabellen analog. *ToDo: was differiert?*

#### Roebel
```{python}
Quelldatei = 'jahreslauf_roebel.xlsx'
```

```{python}
# d199
# D37
# D202
# D203
# D204
# D205
# D206
# D180
# F180
# E3
# D184
# D185
```


```{python}
# sheet t
# D200=D199/(1-D37/100)
# D207=SUM(D202:D206)
# D198=D180/F180/E3
# D203=D184/E3
# D204=D185/E3
```

```{python}
# sheet t
# D200
# D207
# D198
# D203
# D204
```

```{python}
#€/a/Kopf		brutto
Investition_fuer_die_gesamte_Anlage_mit_Nebenkosten = 640 # D200

#€/a/Kopf
laufende_Kosten_pro_a_pro_Kopf = 319 # D207

#€/a/Kopf
Investitionskosten_pro_a_pro_Kopf_BHKW__ohne_Energiekosten_ = 23.9 # D198

#€/a/Kopf
laufende_Kosten_pro_a_pro_Kopf_Energiekosten_BHKW = 340 # D203

#€/a/Kopf
laufende_Kosten_pro_a_pro_Kopf_Ertrag_BHKW__Elektroenergie = -133 # D204
```


```{r}
library(reticulate)
#r 
# Formatierungstest: werden lange Variablennamen in r oder python im github markdown umgebrochen?
Gebaeudeenergiekosten_proKopf_proJahr_ohne_Kapitalkosten_und_Foerdermittel <- 
  py$Investition_fuer_die_gesamte_Anlage_mit_Nebenkosten +
  py$laufende_Kosten_pro_a_pro_Kopf -
  py$Investitionskosten_pro_a_pro_Kopf_BHKW__ohne_Energiekosten_ -
  py$laufende_Kosten_pro_a_pro_Kopf_Energiekosten_BHKW -
  py$laufende_Kosten_pro_a_pro_Kopf_Ertrag_BHKW__Elektroenergie

# Gebaeudeenergiekosten_proKopf_proJahr_ohne_Kapitalkosten_und_Foerdermittel =728


Gebaeudeenergiekosten_proKopf_proJahr_ohne_Kapitalkosten_und_Foerdermittel

```


Summe
```{python}
#Quellzelle: Blatt t: D210
#€/a/Kopf
Gebaeudeenergiekosten_proKopf_proJahr_ohne_Kapitalkosten_und_Foerdermittel = sum([
  Investition_fuer_die_gesamte_Anlage_mit_Nebenkosten
  ,+laufende_Kosten_pro_a_pro_Kopf
  ,-Investitionskosten_pro_a_pro_Kopf_BHKW__ohne_Energiekosten_
  ,-laufende_Kosten_pro_a_pro_Kopf_Energiekosten_BHKW
  ,-laufende_Kosten_pro_a_pro_Kopf_Ertrag_BHKW__Elektroenergie
])


Gebaeudeenergiekosten_proKopf_proJahr_ohne_Kapitalkosten_und_Foerdermittel #728.1

#mögliche Nebenrechnung:
# bei eingepreistem Fremdenergieeinsatz von nur noch	2.16%
```


Umrechnung auf monatlich
```{python}
#Quelldatei: endrechnung.xlsx
#€/Monat/Kopf
Gebaeudeenergiekosten_proKopf_proMon_ohne_Kapitalkosten_und_Foerdermittel = Gebaeudeenergiekosten_proKopf_proJahr_ohne_Kapitalkosten_und_Foerdermittel / 12

Gebaeudeenergiekosten_proKopf_proMon_ohne_Kapitalkosten_und_Foerdermittel
```



## Endergebnis

```{r}
min_Anschliesser_count <- 5000

#km
max_Einzugsradius_km <- 6

#€/Monat/Kopf
Gebaeudeenergiekosten_proKopf_proMon_ohne_Kapitalkosten_und_Foerdermittel <- py$Gebaeudeenergiekosten_proKopf_proMon_ohne_Kapitalkosten_und_Foerdermittel 
#nur Roebel

#m
max_Bohrtiefe <- 'ToDo' # ToDo

#m/s
min_Wasserdurchlaessigkeit <- 'ToDo' #ToDo

#€/Monat/Kopf
bisherige_Gebaeudeenergiekosten_pPpM <- 65
```


Eine Kommunale Solarheizung mit saisonalem Erwärmespeicher, Solarthermie und Wärmenetz lohnt sich überall dort,
wo mindestens `r min_Anschliesser_count` Anschließer auf einem Radius von weniger als `r max_Einzugsradius_km` Kilomentern teilnehmen und der Boden bis in `r max_Bohrtiefe` m Tiefe mindestens einen Wasserdurchlässigkeitswert von `r min_Wasserdurchlaessigkeit` m/s hat. ([Quelle](https://heliogaia.de/endergebnisse.html))

Hintergrund:

Wegen ihrer annähernd gleichen Wichtung *ToDo: welche Wichtung?* liefert die Mittlung der gefundenen Zahlen Anhaltspunkte für den Bedarf bei einem bundesweiten Ausbau der Heliogaia-Netze zur Finanzierung einen laufenden Betrag von `r Gebaeudeenergiekosten_proKopf_proMon_ohne_Kapitalkosten_und_Foerdermittel` € pro Person und Monat ohne Berücksichtigung von Kapitalkosten und Fördermitteln.

Bisher wurden in Deutschland jährlich 65 Milliarden Euro für Gebäudeenergie ausgegeben [Dena](https://heliogaia.de/9254_Gebaeudereport_dena_kompakt_2018.pdf), S.7, das sind monatlich ca. `r bisherige_Gebaeudeenergiekosten_pPpM`€ pro Kopf. 

## ---Anhang------------

## Tests

#### Basics (add above)

##### Zellbezüge in Excel automatisch darstellen
```{python}
import pandas as pd
```


```{python}
#%matplotlib inline
# import basics
# from pycel import ExcelCompiler
# from IPython.display import FileLink
# import matplotlib.pyplot as plt
```


##### Darstellung der chunks mit Grundrechenarten sieht mit r chunks besser aus

2024-01-14: Warum werden in python chunks manche Variablen vom gfm Markdown orange angezeigt? Siehe hier:

```{python}
#€/a/Kopf		brutto
Investition_fuer_die_gesamte_Anlage_mit_Nebenkosten = 640 # D200

#€/a/Kopf
laufende_Kosten_pro_a_pro_Kopf = 319 # D207

#€/a/Kopf
Investitionskosten_pro_a_pro_Kopf_BHKW__ohne_Energiekosten_ = 23.9 # D198

#€/a/Kopf
laufende_Kosten_pro_a_pro_Kopf_Energiekosten_BHKW = 340 # D203

#€/a/Kopf
laufende_Kosten_pro_a_pro_Kopf_Ertrag_BHKW__Elektroenergie = -133 # D204
```


```{r}
library(reticulate)
#r 
# Formatierungstest: werden lange Variablennamen in r oder python im github markdown umgebrochen?
test1 <- 
  py$Investition_fuer_die_gesamte_Anlage_mit_Nebenkosten +
  py$laufende_Kosten_pro_a_pro_Kopf -
  py$Investitionskosten_pro_a_pro_Kopf_BHKW__ohne_Energiekosten_ -
  py$laufende_Kosten_pro_a_pro_Kopf_Energiekosten_BHKW -
  py$laufende_Kosten_pro_a_pro_Kopf_Ertrag_BHKW__Elektroenergie

```


Hir auch: 

```{python}
#Quellzelle: Blatt t: D210
#€/a/Kopf
test2 =\
Investition_fuer_die_gesamte_Anlage_mit_Nebenkosten\
+laufende_Kosten_pro_a_pro_Kopf\
-Investitionskosten_pro_a_pro_Kopf_BHKW__ohne_Energiekosten_\
-laufende_Kosten_pro_a_pro_Kopf_Energiekosten_BHKW\
-laufende_Kosten_pro_a_pro_Kopf_Ertrag_BHKW__Elektroenergie

```

Fazit 2024-01-14: Chunks mit Grundrechenarten besser als R chunks schreiben.

##### Variablen inline im Markdown verwenden
```{python}
min_Anschliesser_count = 5000
max_Einzugsradius_km = 6
```


Eine Kommunale Solarheizung mit saisonalem Erwärmespeicher, Solarthermie und Wärmenetz lohnt sich überall dort,
wo mindestens `r py$min_Anschliesser_count` Anschließer auf einem Radius von weniger als `r py$max_Einzugsradius_km` Kilomentern teilnehmen. ([Quelle](https://heliogaia.de/endergebnisse.html))

##### Diagramme anzeigen

```{python mypychunk1}
#py
# import pandas as pd
#version from 2024-01-11
df = pd.read_excel(
  '/home/danielwittig/repos/Saisonale_Erdwaermespeicher/_base/jahreslauf_roebel.xlsx'
  , sheet_name='e', header = 1)
print(df.shape)
mypyvar0 = df.shape[0]
df.head(7)
df.loc[:732,'Tag'].hist()
```
OK, das Diagramm wird in den Outputs angezeigt. (Nur derzeit nicht in RStudio unter dem chunk - warum?)

```{r myrchunk1}
#r
myrvar= 1
```




* now let's include a python variable here: `r py$mypyvar0` - wow, so inline!
* now let's include an r variable here: `r myrvar` - wow, so inline again! 

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:


#### if needed

```{python}
# from IPython.display import Markdown as md
# 
# fr=2 #GHz
# 
# md("Good Morning! This yields $f_r = %i$ GHz and $Z_p = %f$ mm."%(fr, 3.45))
```


You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

## ToDos
### Prio 1
qqq backup
- get formulae overview 2024-01-12
### Prio 2
- Berücksichtigung von Kapitalkosten und Fördermitteln

### nice to have
- put bash chunks for setup at the beginning
- Wegen ihrer annähernd gleichen Wichtung liefert die Mittlung der gefundenen Zahlen Anhaltspunkte für den Bedarf bei einem bundesweiten Ausbau der Heliogaia-Netze:

    0,03% des Territoriums für Speicher, maximal 1,5% für Kollektorfelder *)
    Der Anteil der Verkehrsflächen beträgt zwischen 3 und 5%, je nachdem, was alles mitgezählt wird.

- 
## Thanks to

https://nrennie.rbind.io/blog/combining-r-and-python-with-reticulate-and-quarto/
https://stackoverflow.com/questions/62408197/editing-keyboard-shortcut-to-produce-code-chunk-in-r-studio
